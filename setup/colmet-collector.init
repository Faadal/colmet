#! /bin/sh
#
# colmet-collector
#
#

# chkconfig: 2345 90 10
# description: This script starts or stops the colmet collector
# processname: colmet-collector
# pidfile: /var/run/oar-collector.pid

### BEGIN INIT INFO
# Provides:          colmet-collector
# Required-Start:    $network $local_fs $remote_fs $all
# Required-Stop:     $network $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Colmet Collector
# Description:       This script starts or stops the colmet collector
### END INIT INFO

# Author: Philippe Le Brouster <philippe.le-brouster@imag.fr>
#

LANG=C
export LANG

PATH=/sbin:/usr/sbin:/bin:/usr/bin:$PATH

DEFAULTCONF=/etc/default/colmet-collector

DAEMON_START="1"
NAME=colmet-collector
DESC="Colmet Collector"
PIDFILE=/var/run/$NAME.pid
LOGFILE=/var/log/colmet/collector.log
DAEMON=$(which colmet)
DAEMON_NAME=colmet-collector
DAEMON_ARGS="--daemon --pidfile $PIDFILE --logfile $LOGFILE"
DAEMON_OPTS="-vv -i zeromq --zeromq-bind-uri ipc:///tmp/colmet_collector -o hdf5 --hdf5-output-filepath /var/lib/colmet/hdf5/counters.hdf5"

NOLSB=

[ -f /lib/lsb/init-functions ] || NOLSB=yes

if [ -f /etc/debian_version ]; then
    system=debian
elif [ -f /etc/redhat-release ]; then
    system=redhat
elif [ -f /etc/SuSE-release ]; then
    system=suse
elif [ -f /etc/gentoo-release ]; then
    system=gentoo
fi

if [ -z "$NOLSB" ]; then
    . /lib/lsb/init-functions
    fail_msg() {
        echo ""
        log_failure_msg "$@"
    }
    warn_msg() {
        log_warning_msg "$@"
    }
    succ_msg() {
        log_success_msg "$@"
    }
    begin_msg() {
        echo -n "$@:"
    }
else
    echo "This system doesn't provide the LSB functions. Failing"
    exit 2
fi


# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r "$DEFAULTCONF" ] && . "$DEFAULTCONF"

do_start(){
	begin_msg "Starting the colmet collector"
	if [ "$DAEMON_START" != "1" ]; then
		warn_msg "Autostart disabled."
		return 0
	fi

	if pidofproc -p $PIDFILE > /dev/null; then
		fail_msg "already running"
		exit 2
	fi

        [ ! -d "$(dirname $LOGFILE)" ] && mkdir -p "$(dirname $LOGFILE)"

        start_daemon -p "$PIDFILE" "$DAEMON" $DAEMON_ARGS $DAEMON_OPTS
        if [ "$?" != 0 ]; then
            fail_msg "Unable to start"
        else
            succ_msg
            # redhat world
            [ -d /var/lock/subsys/ ] && touch  /var/lock/subsys/$NAME
        fi
	return 0
}

do_stop() {
    begin_msg "Stopping $DESC"
    # Return
    #   0 if daemon has been stopped
    #   1 if daemon was already stopped
    #   2 if daemon could not be stopped
    #   other if a failure occurred
    killproc -p "$PIDFILE"
    RETVAL="$?"
    if [ "$RETVAL" = 2 ]; then
        fail_msg "Unable to stop $DESC"
        exit 2
    fi

    # Many daemons don't delete their pidfiles when they exit.
    rm -f $PIDFILE

    # redhat world
    [ -d /var/lock/subsys/ ] && rm -f /var/lock/subsys/$NAME

    succ_msg
    return 0
}

case "$1" in
    start)
        do_start
        ;;
    stop)
        do_stop
        ;;
    reload|restart|force-reload)
        if do_stop; then
            sleep 1
            do_start
        fi
        ;;
    *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
        exit 1
        ;;
esac

:

